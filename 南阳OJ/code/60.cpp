/*
描述
    某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同：
　　1) 院士奖学金，每人8000元，期末平均成绩高于80分（>80），并且在本学期内发表1篇或1篇以上论文的学生均可获得；
　　2) 五四奖学金，每人4000元，期末平均成绩高于85分（>85），并且班级评议成绩高于80分（>80）的学生均可获得；
　　3) 成绩优秀奖，每人2000元，期末平均成绩高于90分（>90）的学生均可获得；
　　4) 西部奖学金，每人1000元，期末平均成绩高于85分（>85）的西部省份学生均可获得；
　　5) 班级贡献奖，每人850元，班级评议成绩高于80分（>80）的学生干部均可获得；
　　只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。
例如姚林的期末平均成绩是87分，班级评议成绩82分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和
班级贡献奖，奖金总数是4850元。
　　现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。
输入
第一行输入数据N，表示测试数据组数(0<N<100),每组测试数据输入的第一行是一个整数X（1 <= X <= 100），
表示学生的总数。接下来的X行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，
是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文字母组成的长度不超过20的字符串
（不含空格）；期末平均成绩和班级评议成绩都是0到100之间的整数（包括0和100）；
是否是学生干部和是否是西部省份学生分别用一个字符表示，Y表示是，N表示不是；
发表的论文数是0到10的整数（包括0和10）。每两个相邻数据项之间用一个空格分隔。

输出
　 每组测试数据输出包括三行，第一行是获得最多奖金的学生的姓名，第二行是这名学生获得的奖金总数。
如果有两位或两位以上的学生获得的奖金最多，输出他们之中在输入文件中出现最早的学生的姓名。
第三行是这X个学生获得的奖学金的总数。

样例输入
1
4
YaoLin 87 82 Y N 0
ChenRuiyi 88 78 N Y 1
LiXin 92 88 N N 0
ZhangQin 83 87 Y N 1
样例输出
ChenRuiyi
9000
28700
*/
/*
bfs
*/
#include<stdio.h>
typedef struct{
	char name[21];
	int qimo;
	int banji;
	char isxue;
	char isxi;
	int num;
	int money;
}Student;
Student ss[100];
int fun(int i)
{
	int s=0;
	if(ss[i].qimo>80&&ss[i].num>=1)s+=8000;
	if(ss[i].qimo>85&& ss[i].banji>80 )s+=4000;
	if(ss[i].qimo>90)s+=2000;
	if(ss[i].qimo>85&& ss[i].isxi=='Y')s+=1000;
	if(ss[i].banji>80&& ss[i].isxue=='Y')s+=850;
	return s;
}
int main()
{
	int T,len,i,s,p;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d",&len);
		for(i=0;i<len;i++)
		{
			scanf("%s",ss[i].name);//这里不能gets(),因为它不认为空格结束，让我检查了40min
			scanf("%d %d %c %c %d",&ss[i].qimo,&ss[i].banji,&ss[i].isxue,&ss[i].isxi,&ss[i].num);
			ss[i].money=fun(i);
		}

		p=0;s=ss[0].money;
		for(i=1;i<len;i++)
		{
			s+=ss[i].money;
			if(ss[i].money>ss[p].money)p=i;
		}
		printf("%s\n%d\n%d\n",ss[p].name,ss[p].money,s);
	}
	return 0;
}
